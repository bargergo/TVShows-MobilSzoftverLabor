/*
 * TVMaze
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.tvshows.model

import com.google.gson.annotations.SerializedName
import io.swagger.v3.oas.annotations.media.Schema
import java.math.BigDecimal
import java.util.*

/**
 * ShowSearchResult
 */
class ShowSearchResult {
    /**
     * Get score
     * @return score
     */
    @get:Schema(required = true, description = "")
    @SerializedName("score")
    var score: BigDecimal? = null

    /**
     * Get show
     * @return show
     */
    @get:Schema(required = true, description = "")
    @SerializedName("show")
    var show: ShowSummary? = null
    fun score(score: BigDecimal?): ShowSearchResult {
        this.score = score
        return this
    }

    fun show(show: ShowSummary?): ShowSearchResult {
        this.show = show
        return this
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null || javaClass != other.javaClass) {
            return false
        }
        val showSearchResult = other as ShowSearchResult
        return score == showSearchResult.score &&
                show == showSearchResult.show
    }

    override fun hashCode(): Int {
        return Objects.hash(score, show)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class ShowSearchResult {\n")
        sb.append("    score: ").append(toIndentedString(score)).append("\n")
        sb.append("    show: ").append(toIndentedString(show)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}