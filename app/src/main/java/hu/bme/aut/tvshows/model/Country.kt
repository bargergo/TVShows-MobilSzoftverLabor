/*
 * TVMaze
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.tvshows.model

import com.google.gson.annotations.SerializedName
import io.swagger.v3.oas.annotations.media.Schema
import java.util.*

/**
 * Country
 */
class Country {
    /**
     * Get name
     * @return name
     */
    @get:Schema(required = true, description = "")
    @SerializedName("name")
    var name: String? = null

    /**
     * Get code
     * @return code
     */
    @get:Schema(required = true, description = "")
    @SerializedName("code")
    var code: String? = null

    /**
     * Get timezone
     * @return timezone
     */
    @get:Schema(required = true, description = "")
    @SerializedName("timezone")
    var timezone: String? = null
    fun name(name: String?): Country {
        this.name = name
        return this
    }

    fun code(code: String?): Country {
        this.code = code
        return this
    }

    fun timezone(timezone: String?): Country {
        this.timezone = timezone
        return this
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null || javaClass != other.javaClass) {
            return false
        }
        val country = other as Country
        return name == country.name &&
                this.code == country.code &&
                timezone == country.timezone
    }

    override fun hashCode(): Int {
        return Objects.hash(name, code, timezone)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Country {\n")
        sb.append("    name: ").append(toIndentedString(name)).append("\n")
        sb.append("    code: ").append(toIndentedString(code)).append("\n")
        sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}