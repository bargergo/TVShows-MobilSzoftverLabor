/*
 * TVMaze
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.tvshows.model

import com.google.gson.annotations.SerializedName
import io.swagger.v3.oas.annotations.media.Schema
import java.math.BigDecimal
import java.util.*

/**
 * Externals
 */
class Externals {
    /**
     * Get tvrage
     * @return tvrage
     */
    @get:Schema(description = "")
    @SerializedName("tvrage")
    var tvrage: BigDecimal? = null

    /**
     * Get thetvdb
     * @return thetvdb
     */
    @get:Schema(description = "")
    @SerializedName("thetvdb")
    var thetvdb: BigDecimal? = null

    /**
     * Get imdb
     * @return imdb
     */
    @get:Schema(description = "")
    @SerializedName("imdb")
    var imdb: String? = null
    fun tvrage(tvrage: BigDecimal?): Externals {
        this.tvrage = tvrage
        return this
    }

    fun thetvdb(thetvdb: BigDecimal?): Externals {
        this.thetvdb = thetvdb
        return this
    }

    fun imdb(imdb: String?): Externals {
        this.imdb = imdb
        return this
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val externals = o as Externals
        return tvrage == externals.tvrage &&
                thetvdb == externals.thetvdb &&
                imdb == externals.imdb
    }

    override fun hashCode(): Int {
        return Objects.hash(tvrage, thetvdb, imdb)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Externals {\n")
        sb.append("    tvrage: ").append(toIndentedString(tvrage)).append("\n")
        sb.append("    thetvdb: ").append(toIndentedString(thetvdb)).append("\n")
        sb.append("    imdb: ").append(toIndentedString(imdb)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}