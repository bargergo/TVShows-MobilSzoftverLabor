/*
 * TVMaze
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.tvshows.model

import com.google.gson.annotations.SerializedName
import io.swagger.v3.oas.annotations.media.Schema
import java.util.*

/**
 * Embedded
 */
class Embedded {
    @SerializedName("seasons")
    private var seasons: MutableList<Season>? = null

    @SerializedName("cast")
    private var cast: MutableList<Cast>? = null
    fun seasons(seasons: MutableList<Season>?): Embedded {
        this.seasons = seasons
        return this
    }

    fun addSeasonsItem(seasonsItem: Season): Embedded {
        if (seasons == null) {
            seasons = ArrayList()
        }
        seasons!!.add(seasonsItem)
        return this
    }

    /**
     * Get seasons
     * @return seasons
     */
    @Schema(description = "")
    fun getSeasons(): List<Season>? {
        return seasons
    }

    fun setSeasons(seasons: MutableList<Season>?) {
        this.seasons = seasons
    }

    fun cast(cast: MutableList<Cast>?): Embedded {
        this.cast = cast
        return this
    }

    fun addCastItem(castItem: Cast): Embedded {
        if (cast == null) {
            cast = ArrayList()
        }
        cast!!.add(castItem)
        return this
    }

    /**
     * Get cast
     * @return cast
     */
    @Schema(description = "")
    fun getCast(): List<Cast>? {
        return cast
    }

    fun setCast(cast: MutableList<Cast>?) {
        this.cast = cast
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null || javaClass != other.javaClass) {
            return false
        }
        val embedded = other as Embedded
        return seasons == embedded.seasons &&
                cast == embedded.cast
    }

    override fun hashCode(): Int {
        return Objects.hash(seasons, cast)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Embedded {\n")
        sb.append("    seasons: ").append(toIndentedString(seasons)).append("\n")
        sb.append("    cast: ").append(toIndentedString(cast)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}