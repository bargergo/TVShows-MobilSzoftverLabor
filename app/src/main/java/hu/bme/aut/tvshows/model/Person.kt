/*
 * TVMaze
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.tvshows.model

import com.google.gson.annotations.SerializedName
import io.swagger.v3.oas.annotations.media.Schema
import java.math.BigDecimal
import java.util.*

/**
 * Person
 */
class Person {
    /**
     * Get id
     * @return id
     */
    @get:Schema(required = true, description = "")
    @SerializedName("id")
    var id: BigDecimal? = null

    /**
     * Get url
     * @return url
     */
    @get:Schema(required = true, description = "")
    @SerializedName("url")
    var url: String? = null

    /**
     * Get name
     * @return name
     */
    @get:Schema(required = true, description = "")
    @SerializedName("name")
    var name: String? = null

    /**
     * Get country
     * @return country
     */
    @get:Schema(required = true, description = "")
    @SerializedName("country")
    var country: Country? = null

    /**
     * Get birthday
     * @return birthday
     */
    @get:Schema(required = true, description = "")
    @SerializedName("birthday")
    var birthday: String? = null

    /**
     * Get deathday
     * @return deathday
     */
    @get:Schema(description = "")
    @SerializedName("deathday")
    var deathday: String? = null

    /**
     * Get gender
     * @return gender
     */
    @get:Schema(required = true, description = "")
    @SerializedName("gender")
    var gender: String? = null

    /**
     * Get image
     * @return image
     */
    @get:Schema(description = "")
    @SerializedName("image")
    var image: Image? = null

    /**
     * Get _links
     * @return _links
     */
    @get:Schema(required = true, description = "")
    @SerializedName("_links")
    var links: Links? = null
    fun id(id: BigDecimal?): Person {
        this.id = id
        return this
    }

    fun url(url: String?): Person {
        this.url = url
        return this
    }

    fun name(name: String?): Person {
        this.name = name
        return this
    }

    fun country(country: Country?): Person {
        this.country = country
        return this
    }

    fun birthday(birthday: String?): Person {
        this.birthday = birthday
        return this
    }

    fun deathday(deathday: String?): Person {
        this.deathday = deathday
        return this
    }

    fun gender(gender: String?): Person {
        this.gender = gender
        return this
    }

    fun image(image: Image?): Person {
        this.image = image
        return this
    }

    fun _links(_links: Links?): Person {
        links = _links
        return this
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null || javaClass != other.javaClass) {
            return false
        }
        val person = other as Person
        return id == person.id &&
                url == person.url &&
                name == person.name &&
                country == person.country &&
                birthday == person.birthday &&
                deathday == person.deathday &&
                gender == person.gender &&
                image == person.image &&
                links == person.links
    }

    override fun hashCode(): Int {
        return Objects.hash(id, url, name, country, birthday, deathday, gender, image, links)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Person {\n")
        sb.append("    id: ").append(toIndentedString(id)).append("\n")
        sb.append("    url: ").append(toIndentedString(url)).append("\n")
        sb.append("    name: ").append(toIndentedString(name)).append("\n")
        sb.append("    country: ").append(toIndentedString(country)).append("\n")
        sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n")
        sb.append("    deathday: ").append(toIndentedString(deathday)).append("\n")
        sb.append("    gender: ").append(toIndentedString(gender)).append("\n")
        sb.append("    image: ").append(toIndentedString(image)).append("\n")
        sb.append("    _links: ").append(toIndentedString(links)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}