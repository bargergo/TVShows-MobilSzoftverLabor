/*
 * TVMaze
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.tvshows.model

import com.google.gson.annotations.SerializedName
import io.swagger.v3.oas.annotations.media.Schema
import java.util.*

/**
 * Links
 */
class Links {
    /**
     * Get self
     * @return self
     */
    @get:Schema(required = true, description = "")
    @SerializedName("self")
    var self: LinksSelf? = null

    /**
     * Get previousepisode
     * @return previousepisode
     */
    @get:Schema(description = "")
    @SerializedName("previousepisode")
    var previousepisode: LinksSelf? = null
    fun self(self: LinksSelf?): Links {
        this.self = self
        return this
    }

    fun previousepisode(previousepisode: LinksSelf?): Links {
        this.previousepisode = previousepisode
        return this
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val links = o as Links
        return self == links.self &&
                previousepisode == links.previousepisode
    }

    override fun hashCode(): Int {
        return Objects.hash(self, previousepisode)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Links {\n")
        sb.append("    self: ").append(toIndentedString(self)).append("\n")
        sb.append("    previousepisode: ").append(toIndentedString(previousepisode)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}