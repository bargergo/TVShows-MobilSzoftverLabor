/*
 * TVMaze
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.tvshows.model

import com.google.gson.annotations.SerializedName
import io.swagger.v3.oas.annotations.media.Schema
import java.util.*

/**
 * Schedule
 */
class Schedule {
    /**
     * Get time
     * @return time
     */
    @get:Schema(required = true, description = "")
    @SerializedName("time")
    var time: String? = null

    @SerializedName("days")
    private var days: MutableList<String> = ArrayList()
    fun time(time: String?): Schedule {
        this.time = time
        return this
    }

    fun days(days: MutableList<String>): Schedule {
        this.days = days
        return this
    }

    fun addDaysItem(daysItem: String): Schedule {
        days.add(daysItem)
        return this
    }

    /**
     * Get days
     * @return days
     */
    @Schema(required = true, description = "")
    fun getDays(): List<String> {
        return days
    }

    fun setDays(days: MutableList<String>) {
        this.days = days
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val schedule = o as Schedule
        return time == schedule.time &&
                days == schedule.days
    }

    override fun hashCode(): Int {
        return Objects.hash(time, days)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Schedule {\n")
        sb.append("    time: ").append(toIndentedString(time)).append("\n")
        sb.append("    days: ").append(toIndentedString(days)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}