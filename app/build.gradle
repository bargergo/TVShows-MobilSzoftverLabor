plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'jacoco'
}

jacoco {
    toolVersion = '0.8.6'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "hu.bme.aut.tvshows"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "orm-type"
    productFlavors {
        mockedOrm {
            dimension "orm-type"
            applicationIdSuffix ".mockedOrm"
            versionNameSuffix "-mockedOrm"
        }

        realOrm {
            dimension "orm-type"
            applicationIdSuffix ".RealOrm"
            versionNameSuffix "-RealOrm"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    defaultConfig{
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
}

ext {
    oltu_version = "1.0.2"
    retrofit_version = "2.9.0"
    swagger_annotations_version = "2.0.0"
    junit_version = "4.12"
    threetenbp_version = "1.3.5"
    json_fire_version = "1.8.0"
    room_version = "2.2.6"
    lifecycle_version = "2.3.1"
    nav_version = "2.3.5"
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "com.google.android.material:material:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'

    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "com.google.dagger:hilt-android:2.34-beta"
    kapt "com.google.dagger:hilt-compiler:2.34-beta"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "io.swagger.core.v3:swagger-annotations:$swagger_annotations_version"
    implementation ("org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:$oltu_version") {
        exclude group:"org.apache.oltu.oauth2" , module: "org.apache.oltu.oauth2.common"
    }
    implementation "io.gsonfire:gson-fire:$json_fire_version"
    implementation "org.threeten:threetenbp:$threetenbp_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    implementation "com.github.bumptech.glide:glide:4.12.0"
    kapt "com.github.bumptech.glide:compiler:4.12.0"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // For instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:2.34-beta"
    kaptAndroidTest "com.google.dagger:hilt-compiler:2.34-beta"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:2.34-beta"
    kaptTest "com.google.dagger:hilt-compiler:2.34-beta"

    testImplementation "androidx.room:room-testing:$room_version"

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
    testImplementation 'org.robolectric:robolectric:4.5.1'

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
}

kapt {
    correctErrorTypes true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ]))
}